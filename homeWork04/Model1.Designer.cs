//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__Match__EventId__32E0915F", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.Events), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.Match), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__Games__FirstClub__2E1BDC42", "FootballClubs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.FootballClubs), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.Games), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__Games__SecondClu__2F10007B", "FootballClubs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.FootballClubs), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.Games), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.FootballClubs), "ListPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.ListPlayers), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__Match__GameId__31EC6D26", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.Games), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.Match), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__ListPlaye__Posit__2B3F6F97", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.Position), "ListPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.ListPlayers), true)]
[assembly: EdmRelationshipAttribute("db_championshipModel", "FK__Match__PlayerId__33D4B598", "ListPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(homeWork04.ListPlayers), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(homeWork04.Match), true)]

#endregion

namespace homeWork04
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class db_championshipEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект db_championshipEntities, используя строку соединения из раздела "db_championshipEntities" файла конфигурации приложения.
        /// </summary>
        public db_championshipEntities() : base("name=db_championshipEntities", "db_championshipEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта db_championshipEntities.
        /// </summary>
        public db_championshipEntities(string connectionString) : base(connectionString, "db_championshipEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта db_championshipEntities.
        /// </summary>
        public db_championshipEntities(EntityConnection connection) : base(connection, "db_championshipEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Events> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Events>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Events> _Events;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<FootballClubs> FootballClubs
        {
            get
            {
                if ((_FootballClubs == null))
                {
                    _FootballClubs = base.CreateObjectSet<FootballClubs>("FootballClubs");
                }
                return _FootballClubs;
            }
        }
        private ObjectSet<FootballClubs> _FootballClubs;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Games> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Games>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Games> _Games;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ListPlayers> ListPlayers
        {
            get
            {
                if ((_ListPlayers == null))
                {
                    _ListPlayers = base.CreateObjectSet<ListPlayers>("ListPlayers");
                }
                return _ListPlayers;
            }
        }
        private ObjectSet<ListPlayers> _ListPlayers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Match> Match
        {
            get
            {
                if ((_Match == null))
                {
                    _Match = base.CreateObjectSet<Match>("Match");
                }
                return _Match;
            }
        }
        private ObjectSet<Match> _Match;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Position> Position
        {
            get
            {
                if ((_Position == null))
                {
                    _Position = base.CreateObjectSet<Position>("Position");
                }
                return _Position;
            }
        }
        private ObjectSet<Position> _Position;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Events. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEvents(Events events)
        {
            base.AddObject("Events", events);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet FootballClubs. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFootballClubs(FootballClubs footballClubs)
        {
            base.AddObject("FootballClubs", footballClubs);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Games. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGames(Games games)
        {
            base.AddObject("Games", games);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ListPlayers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToListPlayers(ListPlayers listPlayers)
        {
            base.AddObject("ListPlayers", listPlayers);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Match. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMatch(Match match)
        {
            base.AddObject("Match", match);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Position. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPosition(Position position)
        {
            base.AddObject("Position", position);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Events.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.String name)
        {
            Events events = new Events();
            events.Id = id;
            events.Name = name;
            return events;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__EventId__32E0915F", "Match")]
        public EntityCollection<Match> Match
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("db_championshipModel.FK__Match__EventId__32E0915F", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("db_championshipModel.FK__Match__EventId__32E0915F", "Match", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="FootballClubs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FootballClubs : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта FootballClubs.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="city">Исходное значение свойства City.</param>
        public static FootballClubs CreateFootballClubs(global::System.Int32 id, global::System.String name, global::System.String city)
        {
            FootballClubs footballClubs = new FootballClubs();
            footballClubs.Id = id;
            footballClubs.Name = name;
            footballClubs.City = city;
            return footballClubs;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Games__FirstClub__2E1BDC42", "Games")]
        public EntityCollection<Games> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Games__SecondClu__2F10007B", "Games")]
        public EntityCollection<Games> Games1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("db_championshipModel.FK__Games__SecondClu__2F10007B", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("db_championshipModel.FK__Games__SecondClu__2F10007B", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__ListPlaye__ClubI__2A4B4B5E", "ListPlayers")]
        public EntityCollection<ListPlayers> ListPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListPlayers>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "ListPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListPlayers>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "ListPlayers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="Games")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Games : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Games.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstClubId">Исходное значение свойства FirstClubId.</param>
        /// <param name="secondClubId">Исходное значение свойства SecondClubId.</param>
        public static Games CreateGames(global::System.Int32 id, global::System.Int32 firstClubId, global::System.Int32 secondClubId)
        {
            Games games = new Games();
            games.Id = id;
            games.FirstClubId = firstClubId;
            games.SecondClubId = secondClubId;
            return games;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstClubId
        {
            get
            {
                return _FirstClubId;
            }
            set
            {
                OnFirstClubIdChanging(value);
                ReportPropertyChanging("FirstClubId");
                _FirstClubId = StructuralObject.SetValidValue(value, "FirstClubId");
                ReportPropertyChanged("FirstClubId");
                OnFirstClubIdChanged();
            }
        }
        private global::System.Int32 _FirstClubId;
        partial void OnFirstClubIdChanging(global::System.Int32 value);
        partial void OnFirstClubIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondClubId
        {
            get
            {
                return _SecondClubId;
            }
            set
            {
                OnSecondClubIdChanging(value);
                ReportPropertyChanging("SecondClubId");
                _SecondClubId = StructuralObject.SetValidValue(value, "SecondClubId");
                ReportPropertyChanged("SecondClubId");
                OnSecondClubIdChanged();
            }
        }
        private global::System.Int32 _SecondClubId;
        partial void OnSecondClubIdChanging(global::System.Int32 value);
        partial void OnSecondClubIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GameDate
        {
            get
            {
                return _GameDate;
            }
            set
            {
                OnGameDateChanging(value);
                ReportPropertyChanging("GameDate");
                _GameDate = StructuralObject.SetValidValue(value, "GameDate");
                ReportPropertyChanged("GameDate");
                OnGameDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GameDate;
        partial void OnGameDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGameDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Games__FirstClub__2E1BDC42", "FootballClubs")]
        public FootballClubs FootballClubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "FootballClubs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "FootballClubs").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FootballClubs> FootballClubsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "FootballClubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FootballClubs>("db_championshipModel.FK__Games__FirstClub__2E1BDC42", "FootballClubs", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Games__SecondClu__2F10007B", "FootballClubs")]
        public FootballClubs FootballClubs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__SecondClu__2F10007B", "FootballClubs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__SecondClu__2F10007B", "FootballClubs").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FootballClubs> FootballClubs1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__Games__SecondClu__2F10007B", "FootballClubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FootballClubs>("db_championshipModel.FK__Games__SecondClu__2F10007B", "FootballClubs", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__GameId__31EC6D26", "Match")]
        public EntityCollection<Match> Match
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("db_championshipModel.FK__Match__GameId__31EC6D26", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("db_championshipModel.FK__Match__GameId__31EC6D26", "Match", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="ListPlayers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListPlayers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ListPlayers.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="clubId">Исходное значение свойства ClubId.</param>
        /// <param name="positionId">Исходное значение свойства PositionId.</param>
        public static ListPlayers CreateListPlayers(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Int32 clubId, global::System.Int32 positionId)
        {
            ListPlayers listPlayers = new ListPlayers();
            listPlayers.Id = id;
            listPlayers.FirstName = firstName;
            listPlayers.LastName = lastName;
            listPlayers.ClubId = clubId;
            listPlayers.PositionId = positionId;
            return listPlayers;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubId
        {
            get
            {
                return _ClubId;
            }
            set
            {
                OnClubIdChanging(value);
                ReportPropertyChanging("ClubId");
                _ClubId = StructuralObject.SetValidValue(value, "ClubId");
                ReportPropertyChanged("ClubId");
                OnClubIdChanged();
            }
        }
        private global::System.Int32 _ClubId;
        partial void OnClubIdChanging(global::System.Int32 value);
        partial void OnClubIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionId
        {
            get
            {
                return _PositionId;
            }
            set
            {
                OnPositionIdChanging(value);
                ReportPropertyChanging("PositionId");
                _PositionId = StructuralObject.SetValidValue(value, "PositionId");
                ReportPropertyChanged("PositionId");
                OnPositionIdChanged();
            }
        }
        private global::System.Int32 _PositionId;
        partial void OnPositionIdChanging(global::System.Int32 value);
        partial void OnPositionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsCaptain
        {
            get
            {
                return _IsCaptain;
            }
            set
            {
                OnIsCaptainChanging(value);
                ReportPropertyChanging("IsCaptain");
                _IsCaptain = StructuralObject.SetValidValue(value, "IsCaptain");
                ReportPropertyChanged("IsCaptain");
                OnIsCaptainChanged();
            }
        }
        private Nullable<global::System.Int32> _IsCaptain;
        partial void OnIsCaptainChanging(Nullable<global::System.Int32> value);
        partial void OnIsCaptainChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs")]
        public FootballClubs FootballClubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FootballClubs> FootballClubsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FootballClubs>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FootballClubs>("db_championshipModel.FK__ListPlaye__ClubI__2A4B4B5E", "FootballClubs", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__ListPlaye__Posit__2B3F6F97", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "Position").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__PlayerId__33D4B598", "Match")]
        public EntityCollection<Match> Match
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("db_championshipModel.FK__Match__PlayerId__33D4B598", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("db_championshipModel.FK__Match__PlayerId__33D4B598", "Match", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="Match")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Match : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Match.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="gameId">Исходное значение свойства GameId.</param>
        /// <param name="eventId">Исходное значение свойства EventId.</param>
        /// <param name="playerId">Исходное значение свойства PlayerId.</param>
        public static Match CreateMatch(global::System.Int32 id, global::System.Int32 gameId, global::System.Int32 eventId, global::System.Int32 playerId)
        {
            Match match = new Match();
            match.Id = id;
            match.GameId = gameId;
            match.EventId = eventId;
            match.PlayerId = playerId;
            return match;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value, "GameId");
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private global::System.Int32 _GameId;
        partial void OnGameIdChanging(global::System.Int32 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value, "EventId");
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Time;
        partial void OnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, "Period");
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__EventId__32E0915F", "Events")]
        public Events Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("db_championshipModel.FK__Match__EventId__32E0915F", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("db_championshipModel.FK__Match__EventId__32E0915F", "Events").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Events> EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("db_championshipModel.FK__Match__EventId__32E0915F", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Events>("db_championshipModel.FK__Match__EventId__32E0915F", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__GameId__31EC6D26", "Games")]
        public Games Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("db_championshipModel.FK__Match__GameId__31EC6D26", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("db_championshipModel.FK__Match__GameId__31EC6D26", "Games").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Games> GamesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("db_championshipModel.FK__Match__GameId__31EC6D26", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Games>("db_championshipModel.FK__Match__GameId__31EC6D26", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__Match__PlayerId__33D4B598", "ListPlayers")]
        public ListPlayers ListPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListPlayers>("db_championshipModel.FK__Match__PlayerId__33D4B598", "ListPlayers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListPlayers>("db_championshipModel.FK__Match__PlayerId__33D4B598", "ListPlayers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListPlayers> ListPlayersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListPlayers>("db_championshipModel.FK__Match__PlayerId__33D4B598", "ListPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListPlayers>("db_championshipModel.FK__Match__PlayerId__33D4B598", "ListPlayers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_championshipModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Position.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Position CreatePosition(global::System.Int32 id, global::System.String name)
        {
            Position position = new Position();
            position.Id = id;
            position.Name = name;
            return position;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_championshipModel", "FK__ListPlaye__Posit__2B3F6F97", "ListPlayers")]
        public EntityCollection<ListPlayers> ListPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListPlayers>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "ListPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListPlayers>("db_championshipModel.FK__ListPlaye__Posit__2B3F6F97", "ListPlayers", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
